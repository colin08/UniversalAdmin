@model Universal.Entity.OrderMedical
@{
    Layout = null;
    ViewBag.Title = "优惠体检套餐";
}


<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
    <title>在线咨询</title>
    <link href="~/Assets/mui/css/mui.css" rel="stylesheet" />
    <link href="~/Assets/mui/css/zx.css" rel="stylesheet" />
    <link href="~/Assets/mui/css/mui.ext.loading.css" rel="stylesheet" />
    <style>
        .mui-row.mui-fullscreen > [class*="mui-col-"] { height: 100%; }

        .mui-col-xs-3,
        .mui-col-xs-9 { overflow-y: auto; height: 100%; }

        .mui-segmented-control .mui-control-item { line-height: 50px; width: 100%; }

        .mui-control-content { display: block; }

        .mui-segmented-control.mui-segmented-control-inverted .mui-control-item.mui-active { background-color: #fff; }

        .fixed-group-buttom { font-size: 14px; height: 44px; width: 100%; background: white; padding: 1px 10px; position: fixed; display: flex; justify-content: space-between; align-items: center; }
            .fixed-group-buttom label { font-size: 16px; color: #F5A623; }
    </style>
</head>


<body>
    <header class="mui-bar mui-bar-nav">
        <a id="back_btn" class="mui-action-back mui-icon mui-icon-left-nav mui-pull-left"></a>
        <h1 class="mui-title">选择体检项</h1>
        <a id='done' class="mui-btn mui-btn-link mui-pull-right mui-btn-blue">@ViewData["BtnText"]</a>
    </header>

    <div class="mui-content mui-row mui-fullscreen" style="padding-bottom: 45px;">
        <div class="mui-col-xs-3">
            <div id="segmentedControls" class="mui-segmented-control mui-segmented-control-inverted mui-segmented-control-vertical">
            </div>
        </div>
        <div id="segmentedControlContents" class="mui-col-xs-9" style="border-left: 1px solid #c8c7cc;">
        </div>
    </div>

    <div class="mui-bar-footer fixed-group-buttom">
        <div class="bar-left">
            <span>套餐价:<label>￥@ViewData["MPrice"]</label> 增加 <label id="footer_total"> @ViewData["SelectTotal"] </label> 项 <label id="footer_select_price">￥@ViewData["SelectPrice"] </label></span>
        </div>
        <div class="bar-right">
            <span>总:<label id="footer_total_price" style="margin-right:20px;">￥@ViewData["TotalPrice"]</label></span>
        </div>
    </div>

    <script src="~/Assets/mui/js/jquery.min.js"></script>
    <script src="~/Assets/mui/js/mui.min.js"></script>
    <script src="~/Assets/mui/js/mui.ext.loading.js"></script>
    <script type="text/javascript" charset="UTF-8">
        var data_json = @Html.Raw(ViewData["ItemJsonData"]);
        mui.init();
        var medical_amount = @ViewData["MPrice"];
        var select_total = @ViewData["SelectTotal"];
        var select_ids = [];
        function ckOnchange() {
            select_ids = [];
            select_total = $("input:checkbox:checked").length;
            $("#footer_total").text(select_total);
            var select_price = 0.00;
            $("input:checkbox:checked").each(function (i, item) {
                var item_price = parseFloat($(this).attr("data-price"));
                select_price += item_price;
                select_ids.push($(this).val());
                console.log(select_ids.join(','));
            })
            $("#footer_select_price").text("￥" + select_price);
            $("#footer_total_price").text("￥" + (medical_amount + select_price));

            if (select_total > 0) {
                //$("#done").removeClass("mui-disabled");
                $("#done").text("完成(" + select_total + ")")
            } else {
                //$("#done").addClass("mui-disabled");
                $("#done").text("完成");
            }

        }

        function SubItemTitleStr(str) {
            var length = 15;
            if (str.length >= length) {
                return str.substr(0, length)+"...";
            } else {
                return str;
            }
        }

        mui.ready(function () {
            var done = document.getElementById('done');
            var back = document.getElementById('back_btn');
            //返回事件
            back.addEventListener('tap', function () {
                location.href = '@Html.Raw(ViewData["BackUrl"])';
            }, false);

            //done event
            done.addEventListener('tap', function () {
                select_ids = [];
                //获取所有选中的ids
                $("input:checkbox:checked").each(function (i, item) {
                    select_ids.push($(this).val());
                })
                
                var ids_str= select_ids.join(',');
			    mui.showLoading("项目添加中..");
			    mui.ajax('/mp/Medical/ModifySelectItem', {
			        data: {
			            o: @Model.OrderNum,
			            ids: ids_str
			        },
			        dataType: 'json',
			        type: 'post',
			        timeout: 10000,
			        headers: { 'Content-Type': 'application/json' },
			        success: function (data) {
			            mui.hideLoading();
			            if (data.msg == 1) {
			                mui.toast("所选项目添加成功");
			                setTimeout(function () {
			                    setTimeout(function () {
			                        location.href = '@Html.Raw(ViewData["BackUrl"])';
			                    }.bind(done), 1000);
			                })
			            } else {
			                mui.alert('错误消息', data.msgbox);
			            }
			        },
			        error: function (xhr, type, errorThrown) {
			            //异常处理；
			            mui.alert('网络异常', "请检查联网是否通畅");
			        }
			    });

            }, false);

        })

        var controls = document.getElementById("segmentedControls");
        var contents = document.getElementById("segmentedControlContents");
        var html = [];
        var i = 1,
            j = 1,
            m = data_json.length + 1, //左侧选项卡数量+1
            n = 11; //每个选项卡列表数量+1
        for (; i < m; i++) {
            html.push('<a class="mui-control-item" data-index="' + data_json[i - 1].id + '" href="#content' + data_json[i - 1].id + '">' + data_json[i - 1].title+'</a>');
        }
        controls.innerHTML = html.join('');
        html = [];
        $.each(data_json, function (i, category) {
            html.push('<div id="content' + category.id + '" class="mui-control-content"><ul class="mui-table-view">');
            $.each(category.items, function (j, item) {
                if (item.type == 0) {
                    //可选择
                    html.push('<li class="mui-table-view-cell" style="padding: 8px 15px;"><div class="mui-input-row mui-checkbox"><label style="padding: 8px 0;font-size:13px">' + SubItemTitleStr(item.title) + '</label><input name="checkboxitem" onchange="ckOnchange()" data-price="' + (j + 2.5) + '" id="ck_test_' + item.id + '" value="' + item.id + '" type="checkbox" style="right:0;"></div></li>');
                } else if (item.type == 1) {
                    //套餐内，禁用
                    html.push('<li class="mui-table-view-cell" style="padding: 8px 15px;"><label style="padding: 8px 0;font-size:13px;color:#aaa">' + SubItemTitleStr(item.title) + '</label><span style="float: right;color: #aaa;font-size: 13px;">套餐内</span>');
                } else if (item.type == 2) {
                    //已选择
                    html.push('<li class="mui-table-view-cell" style="padding: 8px 15px;"><div class="mui-input-row mui-checkbox"><label style="padding: 8px 0;font-size:13px">' + SubItemTitleStr(item.title) + '</label><input name="checkboxitem" checked onchange="ckOnchange()" data-price="' + (j + 2.5) + '" id="ck_test_' + item.id + '" value="' + item.id + '" type="checkbox" style="right:0;"></div></li>');
                }
            })

            html.push('</ul></div>');

        })
        //for (i = 1; i < m; i++) {
        //    html.push('<div id="content' + i + '" class="mui-control-content"><ul class="mui-table-view">');
        //    for (j = 1; j < n; j++) {
        //        html.push('<li class="mui-table-view-cell" style="padding: 8px 15px;"><div class="mui-input-row mui-checkbox"><label style="padding: 8px 0;font-size:13px">支原体(解脲、人型)培养+药敏[外送]</label><input name="checkboxitem" onchange="ckOnchange()" data-price="' + (j + 2.5) + '" id="ck_test_' + j + '" value="' + j + '" type="checkbox" style="right:0;"></div></li>');
        //    }
        //    html.push('</ul></div>');
        //}
        contents.innerHTML = html.join('');
        //默认选中第一个
        controls.querySelector('.mui-control-item').classList.add('mui-active');
        (function () {
            var controlsElem = document.getElementById("segmentedControls");
            var contentsElem = document.getElementById("segmentedControlContents");
            var controlListElem = controlsElem.querySelectorAll('.mui-control-item');
            var contentListElem = contentsElem.querySelectorAll('.mui-control-content');
            var controlWrapperElem = controlsElem.parentNode;
            var controlWrapperHeight = controlWrapperElem.offsetHeight;
            var controlMaxScroll = controlWrapperElem.scrollHeight - controlWrapperHeight;//左侧类别最大可滚动高度
            var maxScroll = contentsElem.scrollHeight - contentsElem.offsetHeight;//右侧内容最大可滚动高度
            var controlHeight = controlListElem[0].offsetHeight;//左侧类别每一项的高度
            var controlTops = []; //存储control的scrollTop值
            var contentTops = [0]; //存储content的scrollTop值
            var length = contentListElem.length;
            for (var i = 0; i < length; i++) {
                controlTops.push(controlListElem[i].offsetTop + controlHeight);
            }
            for (var i = 1; i < length; i++) {
                var offsetTop = contentListElem[i].offsetTop;
                if (offsetTop + 100 >= maxScroll) {
                    var height = Math.max(offsetTop + 100 - maxScroll, 100);
                    var totalHeight = 0;
                    var heights = [];
                    for (var j = i; j < length; j++) {
                        var offsetHeight = contentListElem[j].offsetHeight;
                        totalHeight += offsetHeight;
                        heights.push(totalHeight);
                    }
                    for (var m = 0, len = heights.length; m < len; m++) {
                        contentTops.push(parseInt(maxScroll - (height - heights[m] / totalHeight * height)));
                    }
                    break;
                } else {
                    contentTops.push(parseInt(offsetTop));
                }
            }
            contentsElem.addEventListener('scroll', function () {
                var scrollTop = contentsElem.scrollTop;
                for (var i = 0; i < length; i++) {
                    var offsetTop = contentTops[i];
                    var offset = Math.abs(offsetTop - scrollTop);
                    //						console.log("i:"+i+",scrollTop:"+scrollTop+",offsetTop:"+offsetTop+",offset:"+offset);
                    if (scrollTop < offsetTop) {
                        if (scrollTop >= maxScroll) {
                            onScroll(length - 1);
                        } else {
                            onScroll(i - 1);
                        }
                        break;
                    } else if (offset < 20) {
                        onScroll(i);
                        break;
                    } else if (scrollTop >= maxScroll) {
                        onScroll(length - 1);
                        break;
                    }
                }
            });
            var lastIndex = 0;
            //监听content滚动
            var onScroll = function (index) {
                if (lastIndex !== index) {
                    lastIndex = index;
                    var lastActiveElem = controlsElem.querySelector('.mui-active');
                    lastActiveElem && (lastActiveElem.classList.remove('mui-active'));
                    var currentElem = controlsElem.querySelector('.mui-control-item:nth-child(' + (index + 1) + ')');
                    currentElem.classList.add('mui-active');
                    //简单处理左侧分类滚动，要么滚动到底，要么滚动到顶
                    var controlScrollTop = controlWrapperElem.scrollTop;
                    if (controlScrollTop + controlWrapperHeight < controlTops[index]) {
                        controlWrapperElem.scrollTop = controlMaxScroll;
                    } else if (controlScrollTop > controlTops[index] - controlHeight) {
                        controlWrapperElem.scrollTop = 0;
                    }
                }
            };
            //滚动到指定content
            var scrollTo = function (index) {
                contentsElem.scrollTop = contentTops[index];
            };
            mui(controlsElem).on('tap', '.mui-control-item', function (e) {
                scrollTo(this.getAttribute('data-index'));
                return false;
            });
        })();
    </script>
</body>
</html>
