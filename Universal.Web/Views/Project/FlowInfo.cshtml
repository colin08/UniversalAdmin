@{
    ViewBag.Title = "项目流程信息";
    ViewData["tabTop"] = "project";
}

<!--头部脚本-->
@section head
{

}
<!--头部脚本 end-->

<div class="clear"></div>
<!--wrapper [[-->
<div class="container">
    <div class="new-head mb-40 clearfix">
        <a href="javascript:;" class="fl f16 go-prev"><i class="i-back"></i><span>项目管理</span></a>
        <b class="f20">项目祥情</b>
        <span class="fr">
            <a href="javascript:;" title="一键导出"><i class="i-redbb"></i><span>一键导出</span></a>
            <a href="javascript:;" title="删除"><i class="i-barrel"></i><span>删除项目</span></a>
        </span>
    </div>
    <ul class="new-tab clearfix">
        <li class="current"><a href="javascript:;">流程节点</a></li>
        <li><a href="javascript:;">项目信息</a></li>
        <li><a href="javascript:;">基本信息</a></li>
        <li><a href="javascript:;">拆迁概况</a></li>
    </ul>
    <div class="box-line">
        <div class="step1">
            <!-- [[ 交互待定 -->
        </div>
    </div>
</div>
<!--wrapper ]]-->


<div class="footer">Copyright ©  深圳花伴里实业集团有限公司  粤ICP备13089427号-1</div>






<!--底部脚本-->
@section foot
{
    <script type="text/javascript">
        //项目ID
        var project_id = @ViewData["project_id"];

        /**
        * 【说明】
        * 项目里的流程节点的数据是从/Flow/拷贝的，这里独立添加编辑，不影响/Flow页面里的数据，所以数据结构有改动
        * 这次所有保存、获取数据全部通过json格式传输，获取列表示例
        * {"total":2,"project_id":2,"reference_pieces":"引用到要的块ID,逗号分割，前后都加逗号，示例：,1,2,3,4,","list":[
        * {"id":1,"project_flow_node_id":1,"project_flow_node_title":"标题","piece":1,"status":true,"is_start":false,"is_end":false,"top":1,"left":1,"color":"对号入座","icon":"对号入座","process_to":"对号入座"},
        * {"id":1,"project_flow_node_id":1,"project_flow_node_title":"标题","piece":1,"status":true,"is_start":false,"is_end":false,"top":1,"left":1,"color":"对号入座","icon":"对号入座","process_to":"对号入座"}
        *  ]};
        * 字段解释：
        *	project_id 项目ID
        *	reference_pieces json里有解释
        *		id 当前流程节点在数据库保存的值，后面删除、修改功能用到的就是这个
        *		project_flow_node_id  引用的节点的ID，是/Node/Index里面节点的值，
        *		project_flow_node_title   引用的节点的标题，固定、不可修改
        *		piece  当前节点属于哪个块，如果是通过块添加的流程节点，这个就是块的id；如果是独立右键选择的节点，则传入0
        *		status  当前节点装，0 or 1 对应开启关闭。默认为true，注意为false的情况下，is_end、is_start 不可修改
        *		is_start 是否开始状态，只是个标识而已
        *		is_end 是否结束状态，只是个标识而已
        *		剩下几个就不解释了
        **/



        /**
        * 【获取所有项目的流程节点信息】
        * 接口地址：/Project/APIGetProjectFlowNode?project_id=项目ID
        * 请求方式：GET
        * 返回数据格式：如说明里的json
        */

        /**
        * 【根据块获取流程节点信息】
        * 接口地址：/Project/APIDelProjectFlowNode?id=项目流程ID&project_pieces=项目目前引用到的块id，格式如json里的reference_pieces
        * 请求方式：POST
        * 返回数据格式：/
        * PS:如果当前节点是属于某个块，删除当前节点会有该节点是块在此流程的最后一个节点，删除时项目引用的块会发生改变，所以要传入
        */

        /**
        * 【保存修改的节点信息】
        * 接口地址：/Project/APISave
        * 请求方式：POST
        * 请求数据示例：{"id":1,"project_flow_node_id":1,"project_flow_node_title":"标题","piece":1,"status":true,"is_start":false,"is_end":false,"top":1,"left":1,"color":"对号入座","icon":"对号入座","process_to":"对号入座"}
        * 返回数据格式：/
        */

        /**
        * 【保存所有修改的节点信息】
        * 接口地址：/Project/APISaveALL
        * 请求方式：POST
        * 请求数据示例：如说明里的json
        * 返回数据格式：/
        */

        /**
        * 【添加项目流程节点】
        * 接口地址：/Project/APIAddProjectFlowNode?project_id=项目ID&project_pieces=项目目前引用到的块id，格式如json里的reference_pieces
        * 请求方式：POST
        * 请求数据示例：{"id":1,"project_flow_node_id":1,"project_flow_node_title":"标题","piece":1,"status":true,"is_start":false,"is_end":false,"top":1,"left":1,"color":"对号入座","icon":"对号入座","process_to":"对号入座"}
        * 返回数据格式：result.data 为添加后的id,删除用到的这个
        */

    </script>

}
<!--底部脚本 end-->